{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "virtualMachineName": {
            "type": "string"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "networkInterfaceName": {
            "type": "string"
        },
        "networkSecurityGroupName": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "storageAccountType": {
            "type": "string"
        },
        "diagnosticsStorageAccountName": {
            "type": "string"
        },
        "diagnosticsStorageAccountId": {
            "type": "string"
        },
        "diagnosticsStorageAccountType": {
            "type": "string"
        },
        "addressPrefix": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "subnetPrefix": {
            "type": "string"
        },
        "publicIpAddressName": {
            "type": "string"
        },
        "publicIpAddressType": {
            "type": "string"
        },
		 "servers_sndemoserver_name": {
            "type": "String"
        },
        "serverfarms_SNADemo_name": {
            "type": "String"
        },
        "sites_SNADemo_name": {
            "type": "String"
        },
        "databases_master_name": {
            "type": "String"
        },
        "databases_SNADemo_name": {
            "type": "String"
        },
		"databases_SNADemo_Id": {
            "type": "String"
        },
        "firewallRules_AllowAllWindowsAzureIps_name": {
            "type": "String"
        }
    },
    "variables": {
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftRServer",
                        "offer": "RServer-WS2016",
                        "sku": "Enterprise",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[parameters('virtualMachineName')]",
                        "createOption": "fromImage",
                        "vhd": {
                            "uri": "[concat(concat(reference(resourceId( 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('virtualMachineName'), '20170323121025.vhd')]"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId( 'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {
            "name": "[parameters('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {
            "name": "[parameters('diagnosticsStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[parameters('diagnosticsStorageAccountType')]"
            }
        },
        {
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[parameters('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            }
        },
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "3389",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
		     {
                        "name": "R_Server_port",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "12800",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound"
                        }
		      }	
                ]
            }
        },
	 {
		  "name": "[concat(parameters('virtualMachineName'),'/rdeploy')]",
		  "type": "Microsoft.Compute/virtualMachines/extensions",
		  "location": "[parameters('location')]",
		  "apiVersion": "2015-06-15",
		  "properties": {
			"publisher": "Microsoft.Compute",
			"type": "CustomScriptExtension",
			"typeHandlerVersion": "1.8",
			"autoUpgradeMinorVersion": true,
			"settings": {
			  "fileUris": [ "https://sharedstorage.blob.core.chinacloudapi.cn/deployr/Rdeploy.ps1" ]
			},
			"protectedSettings": {
			  "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', 'rdeploy.ps1', ' \"', parameters('adminPassword'), '\"')]"
			}
		  },
		  "dependsOn": [
			"[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
		  ]
    },
	 {
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[parameters('servers_sndemoserver_name')]",
            "apiVersion": "2014-04-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "dbuser",
                "administratorLoginPassword": "[parameters('adminPassword')]",
                "version": "12.0"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "app",
            "name": "[parameters('serverfarms_SNADemo_name')]",
            "apiVersion": "2015-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[parameters('serverfarms_SNADemo_name')]",
                "numberOfWorkers": 1
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[parameters('sites_SNADemo_name')]",
            "apiVersion": "2015-08-01",
            "location": "[parameters('location')]",
            "tags": {
            },
            "properties": {
                "name": "[parameters('sites_SNADemo_name')]",
                "hostNames": [
                    "[concat(parameters('sites_SNADemo_name'),'.chinacloudsites.cn')]"
                ],
                "enabledHostNames": [
                    "[concat(parameters('sites_SNADemo_name'),'.chinacloudsites.cn')]",
                    "[concat(parameters('sites_SNADemo_name'),'.scm.chinacloudsites.cn')]"
                ],
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_SNADemo_name'),parameters('sites_SNADemo_name'),'.chinacloudsites.cn')]",
                        "sslState": 0,
                        "thumbprint": null,
                        "ipBasedSslState": 0
                    },
                    {
                        "name": "[concat(parameters('sites_SNADemo_name'),parameters('sites_SNADemo_name'),'.scm.chinacloudsites.cn')]",
                        "sslState": 0,
                        "thumbprint": null,
                        "ipBasedSslState": 0
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_SNADemo_name'))]",
				"siteConfig": {
                   "AlwaysOn": true
               }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_SNADemo_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "kind": "v12.0,user",
            "name": "[parameters('databases_SNADemo_name')]",
            "apiVersion": "2014-04-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "edition": "Standard",
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                "sampleName": null
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sndemoserver_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "kind": "v12.0",
            "name": "[parameters('firewallRules_AllowAllWindowsAzureIps_name')]",
            "apiVersion": "2014-04-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_sndemoserver_name'))]"
            ]
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}